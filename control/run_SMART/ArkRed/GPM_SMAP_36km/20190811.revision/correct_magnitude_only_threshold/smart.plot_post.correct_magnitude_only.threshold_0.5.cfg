[CONTROL]
# Root directory (all the paths specified would be under this root dir)
root_dir = /civil/hydro/ymao/data_assim/

[DOMAIN]
# VIC domain file; 'mask' variable = 1 for active grid cells
domain_file = param/vic/ArkRed/ArkRed.domain.smap.nc

[SMART_MATLAB]
# Directory where SMART matlab code sits
matlab_dir = src/SMART/

[SMART_RUN]
# The SMART running start and end time, YYYY-MM-DD-HH
# All outputs will be for this period of time
start_time = 2015-03-31-00
end_time = 2017-12-31-21
# SMART running timestpe [hour]
time_step = 3
# filter_flag 1)KF, 2)EnKF, 3)DI, 4)PART, 5) KF with RTS gap-filling, 6) EnKF with EnKS gap-filling, 7) PART - DIRECT RAINFALL
filter_flag = 6
# transform_flag 1) CDF, 2) seasonal 1&2, 3) bias 1&2, 4) seasonal CDF
transform_flag = 1
# API_model_flag 0) static 1) simple sine model, 2) Ta climatology, 3) PET climatologoy, 4) Ta-variation, 5) PET variation
API_model_flag = 0
# lambda_flag - if = 999 then obtain lambda via fitting against "rain_indep", otherwise it sets a fixed value of lambda
lambda_flag = 0.1
# NUMEN - number of ensembles used in EnKF or EnKS analysis...not used if filter_flag  = 1 or 3
NUMEN = 32
# Q_fixed - if = 999 then whiten tune, otherwise it sets Q
Q_fixed = 0.3
# P_inflation
P_inflation = 0
# upper_bound_API: set to 99999 if do not want to set max soil moisture
upper_bound_API = 99999
# logn_var - variance of multiplicative ensemble perturbations...not sued if filter_flag = 1 or 3....setting to zero means all rainfall error is additive
logn_var = 1
phi = 0
# slope parameter API - not used if API_model_flag = 0 or 1
slope_parameter_API = 0.01
# location flag 0) CONUS, 1) AMMA, 2) Global 3) Australia 31 4) Australia 240 5) Australia, 0.25-degree continental (seems like this should always be set to 5)
location_flag = 1
# window size - time scale (number of timesteps) at which rainfall correction is applied; 3 to 10 days is recommended
window_size = 1
# API_mean
API_mean = 0.98
# bb - where API(t) = API_mean*API(t-1)^bb + rain(t)...default is one
bb = 1
# API_range
API_range = 0.15
# Whether to rescale
if_rescale = 1
# Tuning lambda based on 'rmse' or 'corrcoef'; only used if lambda_flag == 999
lambda_tuning_target = rmse
# 1 for correct rainfall when obs_rain > threshold only; 0 for no such constraint (original SMART)
correct_magnitude_only = 1
# Threshold of the obs_rain threshold (mm/time_step)
correct_magnitude_only_threshold = 0.5
# Whether to rescale ascending & descending SM separately; 1 for separate, 0 for combining ascending & descending SM to be the same product and rescale together
sep_sm_orbit = 1

# --- The [PREC] section is for SMART run specifically (i.e., everything should be SMART-resolution)
[PREC]
# --- Original prec (to be corrected) --- #
# Original prec netCDF file basepath ('YYYY.nc' will be appended)
prec_orig_nc_basepath = tools/prepare_vic_forcing/output/GPM_ArkRed.36km.no_split_grid/prec_only/force.
# Prec variable name in the original prec nc file
prec_orig_varname = PREC
# --- Independent prec (for lambda tuning) --- #
# Independent prec data, netCDF file basepath ('YYYY.nc' will be appended)
#prec_indep_nc_basepath = output/synthetic_data/ArkRed.test/synthetic_meas/indep_prec_meas/indep_prec.
#prec_indep_varname = simulated_indep_prec_meas
prec_indep_nc_basepath = forcing/vic/NLDAS-2/ArkRed.smap_grid/force.
prec_indep_varname = PREC
# --- "True" prec (not really used in SMART calculation) --- # 
# This dataset will be read in by SMART, but will not affect SMART results).
# ('YYYY.nc' will be appended)--- #
prec_true_nc_basepath = forcing/vic/NLDAS-2/ArkRed.smap_grid/force.
prec_true_varname = PREC

[SM]
# --- Whether ascending and descending data are in separate files --- #
sep_am_pm = False

# --- If sep_am_pm is True, load ascending and descending files separately
# Soil moisture data netCDF file, ascending (only needed if sep_am_pm = True)
# "None" for no ascending data
# For synthetic sm data, there is no ascending or descending, so this should be the complete soil moisture data file
# (sm_ascend_varname will only be read if sm_ascend_nc is not None)
#sm_ascend_nc = output/synthetic_data/ArkRed/random1.sm1_5.sm2_5.R_1.Maurer_param/synthetic_meas/synthetic_meas.19800101_19891231.nc
#sm_ascend_varname = simulated_surface_sm
# Soil moisture data netCDF file, descending (only needed if sep_am_pm = True)
# "None" for no descending data
# For synthetic sm data, there is no ascending or descending, so point to the whole data in "sm_ascend_nc", and set "sm_descend_nc" to "None"
# (sm_descend_varname will only be read if sm_descend_nc is not None)
#sm_descend_nc = None
#sm_descend_varname = None

# --- If sep_am_pm is False, load the entire data file, then specify ascending and descending hours (0-23) --- #
sm_nc = output/meas_SMAP/ArkRed/LAI_from_veglib/NLDAS2/data_unscaled/soil_moisture_unscaled.qc_None.20150331_20171231.bad_pixels_removed.nc
sm_varname = soil_moisture
ascend_hour = 0
descend_hour = 12

# --- Soil moisture uncertainty --- #
R = tools/prepare_perturbation/output/meas_error.ArkRed.LAI_from_veglib.v1.nc
R_vartype = std
R_varname = sm_error_unscaled

# --- The [SPATIAL_DOWNSCALE] section is only needed if spatial downscaling (from coarser to finer resolution) is needed AFTER SMART running --- #
[SPATIAL_DOWNSCALE]
# Weight file that maps original prec field (typically GPM) to SM field (typically SMAP 36 km)
weight_nc = tools/prepare_vic_forcing/output/GPM_ArkRed.36km/tmp/gpm_to_vic_weights.no_split.nc
# Original-resolution precipitation (the corrected rainfall will be remapped to this resolution)
prec_orig_resolution_basepath = tools/prepare_vic_forcing/output/GPM_ArkRed.0.1deg/prec_only/force.
prec_orig_varname = PREC

# --- The [REMAP] section is only needed if a final remap step (directly using remap_con) is needed after all the other SMART postprocessing steps --- #
[REMAP]
# Identify the input source for the remap step: either directly from SMART-postprocessing (without spatial downscaling) or after spatial downscaling
# Options: 'post_SMART'; 'post_SMART_spatial_downscale'
prec_source = post_SMART_spatial_downscale
# Target domain to remap to
target_domain_nc = param/vic/ArkRed/ArkRed.domain.nc
# Source domain - must be consistent with the source precipitation data
source_domain_nc = data/GPM/raw_L3_E_w30min_ArkRed/domain.GPM.nc

# --- This section is for plotting and analyzing SMART results after all post-processing --- #
[PLOT]
# Original rainfall basepath (YYYY.nc will be appended)
# Note that this must be the same resolution as the truth and the SMART-postprocessed output specified in this section, but can be at a different resolution as the original rainfall specified in [PREC]
orig_prec_basepath = tools/prepare_vic_forcing/output/GPM_ArkRed.36km.no_split_grid/prec_only/force.
orig_prec_varname = PREC
# Truth rainfall to compare to
truth_prec_basepath = forcing/vic/NLDAS-2/ArkRed.smap_grid/force.
truth_prec_varname = PREC
# Which step of SMART post-processing to get corrected rainfall
# Options: post; spatial_downscale; remap
smart_output_from = post
# Domain nc
#domain_nc = param/vic/ArkRed/ArkRed.domain.nc
domain_nc = param/vic/ArkRed/ArkRed.domain.smap.nc

# --- This section is only needed if need to run  VIC with SMART-corrected rainfall --- #
[RUN_VIC]
# VIC image driver executable file path
vic_exe = VIC/vic/drivers/image/vic_image.exe
# MPI exe (this is absolute path!!!)
mpi_exe = mpirun
# VIC global param file template
vic_global_template = control/vic/ArkRed.Maurer_param.LAI_from_veglib/global.template.txt
# Model step per day
model_steps_per_day = 8
# VIC initial state
vic_init_state_nc = output/vic/ArkRed/LAI_from_veglib/spinup.1979_2014.2014start/states/state.2014start.20150331_00000.nc
# Forcing basepath for OTHER met forcing variables (SMART-corrected prec will be replaced); 'YYYY.nc' will be appended
orig_forcing_nc_basepath = forcing/vic/NLDAS-2/ArkRed/force.

# Which step of SMART post-processing to get corrected rainfall
# Options: post; spatial_downscale; remap
smart_output_from = remap

[OUTPUT]
# SMART process and run root directory
output_basedir = output/SMART/ArkRed/GPM_SMAP_36km/20190811.revision/correct_magnitude_only.threshold_0.5/

